.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::BackgroundJob::ErmSushiHarvester 3pm"
.TH Koha::BackgroundJob::ErmSushiHarvester 3pm "2024-08-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::BackgroundJob::ErmSushiHarvester \- Background job derived class to process the ERM Usage Statistics SUSHI Harvester
=head1 API
.SS "Class methods"
.IX Subsection "Class methods"
\fIjob_type\fR
.IX Subsection "job_type"
.PP
Define the job type of this job: erm_sushi_harvester
.PP
\fIprocess\fR
.IX Subsection "process"
.PP
Koha::BackgroundJob\->find($id)\->process(
    {
        ud_provider_id => \f(CW$self\fR\->erm_usage_data_provider_id
    }
);
.PP
Process the harvesting.
.PP
\fIreport_info\fR
.IX Subsection "report_info"
.PP
Setter for report_info
.PP
\fIset_job_size\fR
.IX Subsection "set_job_size"
.PP
Setter for job_size
.PP
\fIadd_message\fR
.IX Subsection "add_message"
.PP
.Vb 8
\&    $job\->add_message(
\&        {
\&            type => \*(Aqsuccess\*(Aq, # success, warning or error
\&            code => \*(Aqobject_added\*(Aq, # object_added or object_already_exists
\&            title => $row\->{Title},
\&            message => \*(Aqmessage\*(Aq,
\&        }
\&    );
.Ve
.PP
Add a new job message
.PP
\fIenqueue\fR
.IX Subsection "enqueue"
.PP
Enqueue the new job
