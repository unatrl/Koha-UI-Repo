.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::ILL::Batch 3pm"
.TH Koha::ILL::Batch 3pm "2024-08-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::ILL::Batch \- Koha Illbatch Object class
.SS "Class methods"
.IX Subsection "Class methods"
\fIstatus\fR
.IX Subsection "status"
.PP
.Vb 1
\&    my $status = Koha::ILL::Batch > status;
.Ve
.PP
Return the status object associated with this batch
.PP
\fIpatron\fR
.IX Subsection "patron"
.PP
.Vb 1
\&    my $patron = Koha::ILL::Batch\->patron;
.Ve
.PP
Return the \fIKoha::Patron\fR object associated with this batch
.PP
\fIlibrary\fR
.IX Subsection "library"
.PP
.Vb 1
\&    my $library = Koha::ILL::Batch\->library;
.Ve
.PP
Return the \fIKoha::Library\fR object associated with this batch
.PP
\fIrequests\fR
.IX Subsection "requests"
.PP
Return the \fIKoha::ILL::Requests\fR for this batch
.PP
\fIcreate_and_log\fR
.IX Subsection "create_and_log"
.PP
.Vb 1
\&    $batch\->create_and_log;
.Ve
.PP
Log batch creation following storage
.PP
\fIupdate_and_log\fR
.IX Subsection "update_and_log"
.PP
.Vb 1
\&    $batch\->update_and_log;
.Ve
.PP
Log batch update following storage
.PP
\fIdelete_and_log\fR
.IX Subsection "delete_and_log"
.PP
.Vb 1
\&    $batch\->delete_and_log;
.Ve
.PP
Log batch delete
.SS "Internal methods"
.IX Subsection "Internal methods"
\fIstrings_map\fR
.IX Subsection "strings_map"
.PP
Returns a map of column name to string representations including the string,
the mapping type and the mapping category where appropriate.
.PP
Currently handles library and \s-1ILL\s0 batch status expansions.
expansions.
.PP
Accepts a param hashref where the \fIpublic\fR key denotes whether we want the public
or staff client strings.
.PP
Note: the \fIpublic\fR parameter is not currently used.
.PP
\fI_type\fR
.IX Subsection "_type"
.PP
.Vb 1
\&    my $type = Koha::ILL::Batch\->_type;
.Ve
.PP
Return this object's type
.SH "AUTHOR"
.IX Header "AUTHOR"
Andrew Isherwood <andrew.isherwood@ptfs\-europe.com>
