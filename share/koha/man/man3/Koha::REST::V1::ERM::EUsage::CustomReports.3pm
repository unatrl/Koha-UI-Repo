.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::REST::V1::ERM::EUsage::CustomReports 3pm"
.TH Koha::REST::V1::ERM::EUsage::CustomReports 3pm "2024-08-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "API"
.IX Header "API"
.SS "Methods"
.IX Subsection "Methods"
\fImonthly_report\fR
.IX Subsection "monthly_report"
.PP
An endpoint to fetch filtered monthly report data for \s-1ERM\s0 usage statistics
.PP
\fIyearly_report\fR
.IX Subsection "yearly_report"
.PP
An endpoint to fetch filtered yearly report data for \s-1ERM\s0 usage statistics
.PP
\fImetric_types_report\fR
.IX Subsection "metric_types_report"
.PP
An endpoint to fetch report data for \s-1ERM\s0 usage statistics based on metric type columns
.PP
\fIprovider_rollup_report\fR
.IX Subsection "provider_rollup_report"
.PP
An endpoint to fetch all data for all providers for a given report type
.PP
\fI_get_data_set\fR
.IX Subsection "_get_data_set"
.PP
Returns the Koha object that needs to be used to fetch the data for this report.
.PP
\fI_get_correct_query_param\fR
.IX Subsection "_get_correct_query_param"
.PP
Returns the array of ids (or an empty array) for the data type that has been requested as a report parameter.
e.g. If it is a titles report and the user has requested titles with the ids 1,2,3, these will be fetched from the query parameters and returned as (1,2,3).
.PP
\fI_get_result_with_no_statistics\fR
.IX Subsection "_get_result_with_no_statistics"
.PP
Takes in an id number and a dataset. If that id number exists within the dataset then no action is needed.
If it isn't found then that means there are no statistics for that object. It is however required in the report so is returned with a blank dataset.
.PP
\fI_get_object_hash\fR
.IX Subsection "_get_object_hash"
.PP
Returns a hash for a given data type with some additional parameters.
.PP
\fI_get_missing_data\fR
.IX Subsection "_get_missing_data"
.PP
If an id is identified as missing, this piece of data is fetched and returned into _get_result_with_no_statistics for processing.
.PP
\fI_get_report_data\fR
.IX Subsection "_get_report_data"
.PP
Takes the dataset retrieved from the database and converts it into a reportable set of data
Each title in the dataset needs to be split into rows depending on its different properties \- \s-1YOP,\s0 access_type, metric_type
.PP
\fI_create_report_rows\fR
.IX Subsection "_create_report_rows"
.PP
A helper function for creating report rows based on access_type and metric_type
.PP
\fI\fR
.IX Subsection ""
.PP
A method for summing the usage counts for a data  object
