.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::cronjobs::import_webservice_batch 3pm"
.TH misc::cronjobs::import_webservice_batch 3pm "2024-08-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
import_webservice_batch.pl \- Find batches staged by webservice and import them.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
import_webservice_batch.pl [\-\-framework=<frameworkcode> \-\-overlay_framework=<frameworkcode>]
.PP
Options:
.PP
.Vb 3
\&   \-\-help                   brief help message
\&   \-\-framework              specify frameworkcode for new records
\&   \-\-overlay_framework      specify frameworkcode when overlaying records
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 8
.IX Item "--help"
Print a brief help message and exits.
.IP "\fB\-\-framework\fR" 8
.IX Item "--framework"
Specify frameworkcode for new records. Uses default if not specified.
.IP "\fB\-\-overlay_framework\fR" 8
.IX Item "--overlay_framework"
Specify frameworkcode when overlaying records.  Current framework is preserved if not specified.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is designed to import batches staged by webservices (e.g. connexion).
.SH "USAGE EXAMPLES"
.IX Header "USAGE EXAMPLES"
\&\f(CW\*(C`import_webservice_batch.pl\*(C'\fR \- Imports the batches using default framework
.PP
\&\f(CW\*(C`import_webservice_batch.pl\*(C'\fR \-f=<frameworkcode> Imports the batches adding new records into specified framework, not adjusting framework of matched records
.PP
\&\f(CW\*(C`import_webservice_batch.pl\*(C'\fR \-f=<frameworkcode> \-o=<frameworkcode> Imports the batches adding new records into specified framework, overlaying matched records to specified framework
